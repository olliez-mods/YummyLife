on: 
  workflow_dispatch:
    inputs:
      release_name:
        description: Release Name
        required: true
        type: string
      prerelease:
        description: Pre-release
        required: false
        default: false
        type: boolean
      dev_patch_url:
        description: URL to a patch file for development builds
        required: false
        type: string
jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest]
      fail-fast: true
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - name: Packages
        run: |
          sudo apt-get update
          sudo apt-get install g++ make cmake libsdl1.2-dev libglu-dev libgl-dev g++-mingw-w64-i686-win32 curl libssl-dev libcurl4-openssl-dev wget
      - name: Install SDL
        run: |
          wget https://www.libsdl.org/release/SDL-devel-1.2.15-mingw32.tar.gz
          tar zxvf SDL-devel-1.2.15-mingw32.tar.gz
      - name: Install CPP-HTTPLib
        run: |
          mkdir -p ./CPP-HTTPLib
          wget -O ./CPP-HTTPLib/httplib.h https://raw.githubusercontent.com/yhirose/cpp-httplib/master/httplib.h
      - name: Install OpenSSL
        run: |
          wget https://github.com/olliez-mods/OpenSSL-Prebuilt/releases/download/3.0.15-i686/openssl-3.0.15-i686.tar.gz
          tar zxvf openssl-3.0.15-i686.tar.gz
          cp -rf openssl-3.0.15-i686 openssl-3.0.15
      - name: Apply Dev Patch (if exist)
        if: ${{ github.event.inputs.dev_patch_url != '' }}
        run: |
          wget -O dev_patch.patch "${{ github.event.inputs.dev_patch_url }}"
          git apply --ignore-whitespace dev_patch.patch
      - name: Build Scripts
        run: |
          ./build-release.sh
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ inputs.release_name }}
          release_name: ${{ inputs.release_name }}
          body: |
            How to install: https://github.com/olliez-mods/YummyLife/#installing-and-updating
            Having issues? https://github.com/olliez-mods/YummyLife/#troubleshooting
          prerelease: ${{ inputs.prerelease }}
      - name: Upload Linux #LINUX
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./relbuild/YummyLife_linux
          asset_name: YummyLife_linux
          asset_content_type: application/zip
      - name: Upload Windows #WINDOWS
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./relbuild/YummyLife_windows.exe
          asset_name: YummyLife_windows.exe
          asset_content_type: application/zip